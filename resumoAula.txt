>>> Configurando as credenciais no Git

git config --global user.name "wallacelt"
git config --global user.email "Wallace.tolentino@gmail.com"

>>> Verificando as credenciais no Git

git config user.name
git config user.email


>>> Criando um repositório

git init

Com isso você está iniciando um repositório dessa pasta que digitou git init.
Todos os arquivos dentro dessa pasta agora serão reconhecidos pelo git como um projeto.

	C:\Users\Wallace>cd\

	C:\>cd cursogit

	C:\cursogit>cd projeto1

	C:\cursogit\projeto1>git status
	fatal: not a git repository (or any of the parent directories): .git

	C:\cursogit\projeto1>git init
	Initialized empty Git repository in C:/cursogit/projeto1/.git/

	C:\cursogit\projeto1>git status
	On branch main

	No commits yet

	nothing to commit (create/copy files and use "git add" to track)


>>> Verificando o status do repositório

git status

>>> Adicionando arquivos ao git, para monitoração

git add nomes.txt
git add empresa.txt

git add .  <<< Adicionando arquivos em lote ao git.


>>> Commitando um arquivo no git

git commit empresa.txt -m "Estou criando o arquivo com os nomes da empresa"

>>> Commitando vários arquivos no git

git commit -m "Criando nossa página home do projeto"


echo "# curso_github" >> README.md
git init
git add README.md
git commit -m "first commit"

>>> Criando a branch

git branch -M main


>>> Conectando o Git ao Github
git remote add origin https://github.com/wallaceleonardo/curso_github.git

>>> Enviando pela primeira vez ao Github
git push -u origin main

>>> Enviando os arquivos do Git para o GitHub pela segunda vez
git push

>>> Sincronizando o GitHub com o Git local
git pull

>>> Gerando um clone do repositório GitHub
git clone https://github.com/wallaceleonardo/curso_github.git

git clone https://github.com/wallaceleonardo/curso_github.git . <<< Clona sem criar a pasta


>>> Acessando o Logs
git log

C:\cursogit\projeto1>git log
commit eee56bd905ed1041c50d938ef0a460312151a7b4 (HEAD -> main, origin/main)
Author: wallacelt <wallace.tolentino@gmail.com>
Date:   Mon Aug 5 22:55:35 2024 -0300

    Alterando o arquivo README

commit c2f12d5583f9cec8966c77c0aecb44e74a8e8ff4
Author: Wallace Leonardo Tolentino <75217832+wallaceleonardo@users.noreply.github.com>
Date:   Mon Aug 5 22:48:03 2024 -0300

    Create README.md

commit 192dc5b51b31592efb8d57ab1ccbbc67a1356997
Author: wallacelt <wallace.tolentino@gmail.com>
Date:   Mon Aug 5 22:44:05 2024 -0300

    Criando novas funcionalidades na home com paragrafo

commit 9ececb95481029abe21eba8983f516b73e2f54a1
Author: wallacelt <wallace.tolentino@gmail.com>
Date:   Mon Aug 5 21:43:08 2024 -0300

    Colocando h2 na home

commit a03e1911a2b6caeaba8e39037a3c24548aa608a0
Author: wallacelt <wallace.tolentino@gmail.com>
Date:   Mon Aug 5 21:32:26 2024 -0300

    Criando nossa página home do projeto

commit 99c870fe3e6218c118286778517d14b30712a07c
Author: wallacelt <wallace.tolentino@gmail.com>
Date:   Mon Aug 5 21:28:16 2024 -0300

    Lista com os nomes dos funcionários

commit f1cb5289319ba07e5483f3273d34838ada31a1e2
Author: wallacelt <wallace.tolentino@gmail.com>
Date:   Mon Aug 5 21:27:11 2024 -0300

    Estou criando o arquivo com os nomes da empresa
(END)

>>> Para sair do log só aperta a tecla q(quit)


>>> Revertendo arquivos com checkout (Voltando o arquivo para seu estado original)
git checkout "nome do arquivo"

git checkout index.html


>>> Ignorando arquivos e pastas no git
1) cria a pasta .gitignore na pasta do projeto
2) informar os arquivos e pastas que devem ser ignorados e não enviados ao GitHub

/node_modules <<< ignorando uma pasta
.env.local <<< ignorando um arquivo


>>> Voltando e dando reset
git reset --hard origin/main

* --hard força o reset na branch main
quando se utiliza o git reset, o git vai ao GitHub e trás o último commit feito


############## branch ####################

>>> Visualizando as branch do projeto
git branch

C:\cursogit\projeto1>git branch
* main

>>> Criando uma nova branch
git branch page_home


>>> Mudando de uma branch pra outra
git checkout page_home

>>> Criando e Mudando de uma vez só para uma nova branch
git checkout -b "page_teste"

>>> Enviando ao Github a nova branch
git push --set-upstream origin page_home

>>> Deletando uma branch
git branch -d page_teste

>>> Unindo branch
git merge

>>> Conhecendo o Stash <<< Volta uma branch ao status original do ultimo commit
git stash

>>> Listando as stashs
git stash list 

>>> Visualizando as stashs
gti stash show -p 2

>>> Aplicando uma stash
git stash apply 2

>>> Trabalhando com tags
git tag -a v1.0 -m "Primeira versao do sistema"
git tag -a v2.0 -m "Novas funcionalidades da home do sistema"

>>> Visualizando as tags
git tag

C:\cursogit\projeto1>git tag
v1.0
v2.0


>>> Analisando uma tag
git show v1.0

>>> Alternando entre tags
git checkout v1.0

>>> Enviando uma tag especifica para o repositório GitHub
git push origin v1.0

>>> Enviando todas as tags para o repositório GitHub
git push origin --tags


>>> Buscando todas branches no repositório GitHub
git fetch -a

C:\cursogit\projeto1>git fetch -a
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 1), reused 3 (delta 1), pack-reused 0
Unpacking objects: 100% (3/3), 344 bytes | 18.00 KiB/s, done.
From https://github.com/wallaceleonardo/curso_github
 * [new branch]      cadastro   -> origin/cadastro

>>> Acessando a nova branch
git checkout cadastro

>>> Sincronizando as branchs
git pull


>>> Usando git gc <<< Utilizado para melhorar a performace do repositório
git gc

C:\cursogit\desafio\clone1>git gc
Enumerating objects: 117, done.
Counting objects: 100% (117/117), done.
Delta compression using up to 8 threads
Compressing objects: 100% (50/50), done.
Writing objects: 100% (117/117), done.
Total 117 (delta 59), reused 113 (delta 58), pack-reused 0 (from 0)

>>> Utilizando o shortlog
git shortlog

Wallace Leonardo Tolentino (2):
      Create README.md
      Create java

wallacelt (30):
      Estou criando o arquivo com os nomes da empresa
      Lista com os nomes dos funcionários
      Criando nossa página home do projeto
      Colocando h2 na home
      Criando novas funcionalidades na home com paragrafo
      Alterando o arquivo README
      Tirando alguns nomes da nossa lista
      adcionando gitignore ao projeto
      Criando arquivo com o resumo do curso
      Complementando arquivo resumoAula
      Merge branch 'main' of https://github.com/wallaceleonardo/curso_github
      deletando java
      Criando descrição da página home
      Complementando arquivo resumoAula
      Alterando arquivo resumoAula
      Alterando o arquivo resumoAula
      Alterando o arquivo resumoAula
      Finalizando pagina home com toda descricao
      Regularizando branch main
      Atualizando page_home
      Regularizando Main
      Finalizado a segunda parte da home
      Merge branch 'page_home'
      Finalizado o sistema de login
      Alterando o arquivo resumoAula
      atualizando o resumoAula
      Nova home finalziada
      Atualizando resumoAula
      Atualizando arquivo resumoAula
      Finalizando a funcionalidade de mostrar os dados do usuario

>>> Conhecendo diff
git diff

C:\cursogit\desafio\clone1>git diff
diff --git a/empresa.txt b/empresa.txt
index 0078b81..e458a38 100644
--- a/empresa.txt
+++ b/empresa.txt
@@ -1 +1,4 @@
 Banco do Brasil
+Sujeito programador
+Curso Git
+YouTube

>>> Verificando as diferencas em arquivo especifico
git diff HEAD: nomes.txt

C:\cursogit\desafio\clone1>git diff HEAD: nomes.txt

C:\cursogit\desafio\clone1>git diff HEAD: nomes.txt
diff --git a/nomes.txt b/nomes.txt
index 0cdf5ea..66696fb 100644
--- a/nomes.txt
+++ b/nomes.txt
@@ -5,3 +5,5 @@ Pollyana
 Sofia
 Leonardo
 Sujeito programador
+Jorge
+

>>> Verificando as diferencas em pasta
git diff HEAD: /styles/arquivo.css

>>> Usando o reflog
git reflog

C:\cursogit\desafio\clone1>git reflog
dc89045 (HEAD -> listagem, origin/listagem) HEAD@{0}: commit: Finalizando a funcionalidade de mostrar os dados do usuario
fd86e24 (origin/main, origin/HEAD, main) HEAD@{1}: checkout: moving from main to listagem
fd86e24 (origin/main, origin/HEAD, main) HEAD@{2}: clone: from https://github.com/wallaceleonardo/curso_github.git
